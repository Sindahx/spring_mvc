<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        "> 
		<bean id="dataSourceMessage" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">	 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
		<!--<property name="url" value="jdbc:mysql://192.168.1.123:3306/dffx_db_im?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="12345" />
		-->
		
		<property name="url" value="jdbc:mysql://121.201.36.80:43307/dffx_db_im?useUnicode=true&amp;characterEncoding=utf8"/> 
		<property name="username" value="dbapi1" /> 
		<property name="password" value="e!*2016@dbapi" />
		
		<property name="initialSize" value="10" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="100" /> 
		<property name="maxWait" value="30000" /> 
		<property name="timeBetweenEvictionRunsMillis" value="30000" /> 
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />	 
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
		<property name="filters" value="wall,stat" />
	</bean>	
	
	<bean id="messageMultipleDataSource" class="com.dffx.servlet.MessageMultipleDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceMessage"/>
        <property name="targetDataSources">
            <map>
                <entry key="dataSourceMessage" value-ref="dataSourceMessage"/>      
            </map>
        </property>
    </bean>   
	
	<bean id ="messageSqlSessionFactory"  class ="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name ="dataSource" ref ="messageMultipleDataSource" />
		<property name ="configLocation" value ="classpath:messagemybatis.xml" />
		<property name ="mapperLocations" >
		<list >		 
			<value> classpath:com/dffx/messagemapper/*.xml</value >
		</list>
		</property >
	</bean>
	
	
	<bean id="messageTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">     
		<property name ="dataSource" ref ="messageMultipleDataSource" />
    </bean>
    <tx:advice id="mstxAdvice" transaction-manager="messageTransactionManager">  
		    <tx:attributes>  
		      <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
		      <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
		      <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
		      <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
		      <tx:method name="*"  propagation="REQUIRED" rollback-for="Exception"/>  
		   </tx:attributes>  
	</tx:advice>
	<aop:config>  
		<aop:pointcut id="messageTransactionPointcut"  expression="execution(* com.dffx.service..*.*(..))"/>
		 <aop:advisor advice-ref="mstxAdvice" pointcut-ref="messageTransactionPointcut"/>   
	</aop:config>
	
	
	<bean name="messageScanner" class ="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name ="basePackage" value ="com.dffx.messagemapper" />
		<property name="sqlSessionFactoryBeanName" value="messageSqlSessionFactory" />		
		<property name ="markerInterface" value ="com.dffx.messagemapper.SqlMapper" />
	</bean >
</beans>